name: Update OpenAI Assistant Instructions

on:
  push:
    branches:
      - main
    paths:
      - openapi/assistant/update_instructions.yaml

jobs:
  update-instructions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract assistant_id and tenant_name
        id: extract_variables
        uses: mikefarah/yq@master
        with:
          cmd: |
            echo "ASSISTANT_ID=$(yq '.assistant_id' ./openapi/assistant/update_instructions.yaml')" >> $GITHUB_ENV
            echo "TENANT_NAME=$(yq '.tenant_name' ./openapi/assistant/update_instructions.yaml')" >> $GITHUB_ENV
            echo "INSTRUCTIONS=$(yq '.instructions' ./openapi/assistant/update_instructions.yaml')" >> $GITHUB_ENV

      - name: Set API Key based on tenant_name
        run: |
          case "${{ env.TENANT_NAME }}" in
            "demo")
              echo "PROJECT_API_KEY=${{ secrets.OPENAI_DEMO_PROJECT_API_KEY }}" >> $GITHUB_ENV
              ;;
            "rakuten-cc")
              echo "PROJECT_API_KEY=${{ secrets.OPENAI_RAKUTEN_CC_PROJECT_API_KEY }}" >> $GITHUB_ENV
              ;;
            "rakuten-rookie")
              echo "PROJECT_API_KEY=${{ secrets.OPENAI_RAKUTEN_ROOKIE_PROJECT_API_KEY }}" >> $GITHUB_ENV
              ;;
            "bs24")
              echo "PROJECT_API_KEY=${{ secrets.OPENAI_BS_24_PROJECT_API_KEY }}" >> $GITHUB_ENV
              ;;
            *)
              echo "Error: Unknown tenant_name '${{ env.TENANT_NAME }}'"
              exit 1
              ;;
          esac

      - name: Update OpenAI Assistant Instructions using curl
        run: |
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" \
            -X POST \
            "https://api.openai.com/v1/assistants/${{ env.ASSISTANT_ID }}" \
            -H "Content-Type: application/json" \
            -H "OpenAI-Beta: assistants=v2" \
            -H "OpenAI-Project: ${{ env.PROJECT_API_KEY }}" \
            -d "{
              \"instructions\": \"${{ env.INSTRUCTIONS }}\"
            }")

          if [ "$RESPONSE" -ne 200 ]; then
            echo "Failed to update assistant instructions"
            cat response.json
            exit 1
          else
            echo "Assistant instructions updated successfully"
            cat response.json
          fi
